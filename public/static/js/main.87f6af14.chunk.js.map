{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","href","role","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAKe,SAASA,EAAT,GAAoG,IAAD,IAA7EC,OAAUC,EAAmE,EAAnEA,cAAeC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,eAC3F,OACI,qBAAKC,UAAU,sBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,2CAAa,sBAAMA,UAAWC,IAAW,CAAC,eAAgBF,EAAgB,eAAgBA,IAA7E,SAAiGF,OAC9G,uCAAS,cAAC,IAAD,CAAQK,OAAO,mBAAf,SAAmCJ,UAEhD,qBAAKE,UAAU,WAAf,SACI,cAAC,IAAD,CAAMG,GAAE,kBAAaP,GAAiBI,UAAU,oBAAoBI,KAAK,IAAIC,KAAK,SAAlF,mCCZL,SAASC,IACpB,OACI,sBAAKN,UAAU,OAAf,UACI,8BACI,sBAAMA,UAAU,yBADpB,gBAGA,8BACI,sBAAMA,UAAU,wBADpB,gBCFZ,I,EAAMO,EAAiBC,YAAH,6MAWPC,EAAb,4JACI,WACI,OACI,eAAC,WAAD,WACI,oBAAIT,UAAU,iBAAd,sBACA,cAACM,EAAD,IACA,cAAC,IAAD,CAAOI,MAAOH,EAAd,SAEQ,YAA+B,IAA5BI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACf,OAAGF,EAAgB,4CAChBC,EAAcE,QAAQC,IAAIH,IAC7BE,QAAQC,IAAIF,GAEL,cAAC,WAAD,UAECA,EAAKG,SAASC,KAAI,SAAAtB,GAAM,OACpB,cAACD,EAAD,CAAuCC,OAAQA,GAA9BA,EAAOC,+BAhBhE,GAA8BsB,aA4BfT,ICvCTU,EAAeX,YAAH,0VAiBLY,EAAb,4JACI,WACI,IAAMxB,EAAkByB,KAAKC,MAAMC,MAAMC,OAAnC5B,cAEN,OADAA,EAAgB6B,SAAS7B,GAErB,cAAC,WAAD,UACI,cAAC,IAAD,CAAOc,MAAOS,EAAcO,UAAW,CAAE9B,iBAAzC,SAEQ,YAA+B,IAA5Be,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACf,GAAIF,EAAS,OAAO,4CAChBC,GAAOE,QAAQC,IAAIH,GAEvB,MAMIC,EAAKlB,OALLE,EADJ,EACIA,aACAD,EAFJ,EAEIA,cACA+B,EAHJ,EAGIA,YACA5B,EAJJ,EAIIA,eAJJ,IAKI6B,OAAUC,EALd,EAKcA,UAAWC,EALzB,EAKyBA,YAAaC,EALtC,EAKsCA,YAGtC,OAAO,gCACH,qBAAI/B,UAAU,iBAAd,UAA+B,sBAAMA,UAAU,YAAhB,qBAA/B,IAA2EH,KAC3E,oBAAIG,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACI,qBAAIA,UAAU,kBAAd,4BACoBJ,KAEpB,qBAAII,UAAU,kBAAd,0BACkB2B,KAElB,qBAAI3B,UAAU,kBAAd,gCACuB,sBAAMA,UAAWC,IAAW,CAC3C,eAAgBF,EAChB,eAAgBA,IAFD,SAGdA,EAAiB,MAAQ,aAGtC,oBAAIC,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACI,qBAAIA,UAAU,kBAAd,wBAA4C6B,KAC5C,qBAAI7B,UAAU,kBAAd,0BAA8C8B,KAC9C,qBAAI9B,UAAU,kBAAd,0BAA8C+B,QAElD,uBACA,cAAC,IAAD,CAAM5B,GAAG,IAAIH,UAAU,oBAAvB,8BA5ChC,GAA4BkB,aAsDbE,IC7EA,G,MAAA,IAA0B,kCCQnCY,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAqBQC,MAlBf,WACE,OACE,cAAC,IAAD,CAAgBH,OAAQA,EAAxB,SACE,eAAC,IAAD,WACE,qBAAKhC,UAAU,gBAAf,SACE,qBACEoC,IAAKC,EACLC,IAAI,SACJC,MAAO,CAAEC,MAAO,IAAKC,QAAS,QAASC,OAAQ,YAGnD,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpC,IACjC,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,yBAAyBC,UAAWzB,UCZ/C0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87f6af14.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success }}) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission: <span className={classNames({'text-success': launch_success, 'text-danger': !launch_success})}>{ mission_name }</span></h4>\r\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local }</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\" href=\"#\" role=\"button\">Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MissionKey() {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\"/> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\"/> = Fail\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport LaunchItem from './LaunchItem'\r\nimport MissionKey from './MissionKey'\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query launchesQuery {\r\n        launches {\r\n            flight_number\r\n            mission_name\r\n            launch_date_local\r\n            launch_success\r\n        }\r\n    }\r\n`;\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"display-4 my-3\">Launches</h1>\r\n                <MissionKey />\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if(loading) return <h4>Loading...</h4>\r\n                            if(error) return console.log(error)\r\n                            console.log(data)\r\n\r\n                            return <Fragment>\r\n                                {\r\n                                    data.launches.map(launch => (\r\n                                        <LaunchItem key={launch.flight_number} launch={launch} />\r\n                                    ))\r\n                                }\r\n                            </Fragment>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\n\r\nconst LAUNCH_QUERY = gql`\r\nquery LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n        flight_number\r\n        mission_name\r\n        launch_year\r\n        launch_success\r\n        launch_date_local,\r\n        rocket {\r\n            rocket_id\r\n            rocket_name\r\n            rocket_type\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport class Launch extends Component {\r\n    render() {\r\n        let { flight_number } = this.props.match.params;\r\n        flight_number = parseInt(flight_number)\r\n        return (\r\n            <Fragment>\r\n                <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error)\r\n\r\n                            const {\r\n                                mission_name,\r\n                                flight_number,\r\n                                launch_year,\r\n                                launch_success,\r\n                                rocket: { rocket_id, rocket_name, rocket_type }\r\n                            } = data.launch\r\n\r\n                            return <div>\r\n                                <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission</span> {mission_name}</h1>\r\n                                <h4 className=\"mb-3\">Launch Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Flight Number: {flight_number}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Launch Year: {launch_year}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Launch Successful: <span className={classNames({\r\n                                            \"text-success\": launch_success,\r\n                                            \"text-danger\": !launch_success\r\n                                        })}>{launch_success ? \"Yes\" : \"No\"}</span>\r\n                                    </li>\r\n                                </ul>\r\n                                <h4 className=\"my-3\">Rocket Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\r\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\r\n                                </ul>\r\n                                <hr/>\r\n                                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n                            </div>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.png';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App container\">\n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{ width: 300, display: \"block\", margin: \"auto\" }}\n          />\n        </div>\n        <Route exact path=\"/\" component={Launches} />\n        <Route exact path=\"/launch/:flight_number\" component={Launch} />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}